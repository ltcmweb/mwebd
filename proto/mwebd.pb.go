// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: mwebd.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_mwebd_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{0}
}

type StatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The height of the latest block.
	BlockHeaderHeight int32 `protobuf:"varint,1,opt,name=block_header_height,json=blockHeaderHeight,proto3" json:"block_header_height,omitempty"`
	// The height of the latest MWEB header.
	MwebHeaderHeight int32 `protobuf:"varint,2,opt,name=mweb_header_height,json=mwebHeaderHeight,proto3" json:"mweb_header_height,omitempty"`
	// The height at which the MWEB utxo set is synced to.
	MwebUtxosHeight int32 `protobuf:"varint,3,opt,name=mweb_utxos_height,json=mwebUtxosHeight,proto3" json:"mweb_utxos_height,omitempty"`
	// The timestamp of the latest block.
	BlockTime     uint32 `protobuf:"varint,4,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_mwebd_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{1}
}

func (x *StatusResponse) GetBlockHeaderHeight() int32 {
	if x != nil {
		return x.BlockHeaderHeight
	}
	return 0
}

func (x *StatusResponse) GetMwebHeaderHeight() int32 {
	if x != nil {
		return x.MwebHeaderHeight
	}
	return 0
}

func (x *StatusResponse) GetMwebUtxosHeight() int32 {
	if x != nil {
		return x.MwebUtxosHeight
	}
	return 0
}

func (x *StatusResponse) GetBlockTime() uint32 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

type UtxosRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The block height from which to start fetching utxos from.
	// After all mined utxos have been streamed, unconfirmed and
	// newly confirmed utxos will also be streamed. If this is set
	// to 0 then all utxos belonging to the account will be fetched.
	FromHeight int32 `protobuf:"varint,1,opt,name=from_height,json=fromHeight,proto3" json:"from_height,omitempty"`
	// The scan secret or view key represents the account for
	// which utxos should be streamed.
	ScanSecret    []byte `protobuf:"bytes,2,opt,name=scan_secret,json=scanSecret,proto3" json:"scan_secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UtxosRequest) Reset() {
	*x = UtxosRequest{}
	mi := &file_mwebd_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UtxosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtxosRequest) ProtoMessage() {}

func (x *UtxosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtxosRequest.ProtoReflect.Descriptor instead.
func (*UtxosRequest) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{2}
}

func (x *UtxosRequest) GetFromHeight() int32 {
	if x != nil {
		return x.FromHeight
	}
	return 0
}

func (x *UtxosRequest) GetScanSecret() []byte {
	if x != nil {
		return x.ScanSecret
	}
	return nil
}

type Utxo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The block height of the utxo, or 0 for unconfirmed.
	Height int32 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	// The value of the utxo in litoshis.
	Value uint64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	// The MWEB address that the utxo was received on.
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// The output ID. This functions like a transaction hash,
	// but is unique to every utxo.
	OutputId string `protobuf:"bytes,4,opt,name=output_id,json=outputId,proto3" json:"output_id,omitempty"`
	// The timestamp of the block the utxo was mined in.
	BlockTime     uint32 `protobuf:"varint,5,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Utxo) Reset() {
	*x = Utxo{}
	mi := &file_mwebd_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Utxo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Utxo) ProtoMessage() {}

func (x *Utxo) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Utxo.ProtoReflect.Descriptor instead.
func (*Utxo) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{3}
}

func (x *Utxo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Utxo) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Utxo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Utxo) GetOutputId() string {
	if x != nil {
		return x.OutputId
	}
	return ""
}

func (x *Utxo) GetBlockTime() uint32 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

type AddressRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The starting index of the range.
	FromIndex uint32 `protobuf:"varint,1,opt,name=from_index,json=fromIndex,proto3" json:"from_index,omitempty"`
	// The ending index of the range. The result will contain all
	// addresses up to but not including this index.
	ToIndex uint32 `protobuf:"varint,2,opt,name=to_index,json=toIndex,proto3" json:"to_index,omitempty"`
	// The scan secret or view key represents the account for
	// which addresses should be returned.
	ScanSecret []byte `protobuf:"bytes,3,opt,name=scan_secret,json=scanSecret,proto3" json:"scan_secret,omitempty"`
	// The public key of the spend secret for the account. The spend
	// key is required for spending utxos but is also required
	// for generating addresses.
	SpendPubkey   []byte `protobuf:"bytes,4,opt,name=spend_pubkey,json=spendPubkey,proto3" json:"spend_pubkey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressRequest) Reset() {
	*x = AddressRequest{}
	mi := &file_mwebd_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressRequest) ProtoMessage() {}

func (x *AddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressRequest.ProtoReflect.Descriptor instead.
func (*AddressRequest) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{4}
}

func (x *AddressRequest) GetFromIndex() uint32 {
	if x != nil {
		return x.FromIndex
	}
	return 0
}

func (x *AddressRequest) GetToIndex() uint32 {
	if x != nil {
		return x.ToIndex
	}
	return 0
}

func (x *AddressRequest) GetScanSecret() []byte {
	if x != nil {
		return x.ScanSecret
	}
	return nil
}

func (x *AddressRequest) GetSpendPubkey() []byte {
	if x != nil {
		return x.SpendPubkey
	}
	return nil
}

type AddressResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An array of MWEB addresses within the requested range.
	Address       []string `protobuf:"bytes,1,rep,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressResponse) Reset() {
	*x = AddressResponse{}
	mi := &file_mwebd_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressResponse) ProtoMessage() {}

func (x *AddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressResponse.ProtoReflect.Descriptor instead.
func (*AddressResponse) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{5}
}

func (x *AddressResponse) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

type LedgerApdu struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LedgerApdu) Reset() {
	*x = LedgerApdu{}
	mi := &file_mwebd_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LedgerApdu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerApdu) ProtoMessage() {}

func (x *LedgerApdu) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerApdu.ProtoReflect.Descriptor instead.
func (*LedgerApdu) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{6}
}

func (x *LedgerApdu) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SpentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An array of output IDs to perform checks for.
	OutputId      []string `protobuf:"bytes,1,rep,name=output_id,json=outputId,proto3" json:"output_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpentRequest) Reset() {
	*x = SpentRequest{}
	mi := &file_mwebd_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpentRequest) ProtoMessage() {}

func (x *SpentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpentRequest.ProtoReflect.Descriptor instead.
func (*SpentRequest) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{7}
}

func (x *SpentRequest) GetOutputId() []string {
	if x != nil {
		return x.OutputId
	}
	return nil
}

type SpentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An array of the output IDs that were not found in the
	// unspent set. This means that the outputs are either
	// unconfirmed or were spent.
	OutputId      []string `protobuf:"bytes,1,rep,name=output_id,json=outputId,proto3" json:"output_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpentResponse) Reset() {
	*x = SpentResponse{}
	mi := &file_mwebd_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpentResponse) ProtoMessage() {}

func (x *SpentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpentResponse.ProtoReflect.Descriptor instead.
func (*SpentResponse) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{8}
}

func (x *SpentResponse) GetOutputId() []string {
	if x != nil {
		return x.OutputId
	}
	return nil
}

type CreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The raw bytes of the serialized transaction. This will be
	// a template where the non-MWEB inputs will remain unchanged,
	// and the MWEB inputs are specified by TxIns with the outpoint
	// hash set to the output ID of the utxo being spent, and the
	// outpoint index set to the index of the address that the utxo
	// was received on. MWEB outputs are specified by TxOuts with
	// the script pubkey set to the serialized scan and spend pubkeys
	// of the destination MWEB address. Any non-MWEB outputs will be
	// transformed into MWEB peg-outs. If the transaction doesn't
	// contain any MWEB i/o then the result will be unchanged.
	RawTx []byte `protobuf:"bytes,1,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
	// The scan secret or view key represents the account that
	// the utxos being spent belong to.
	ScanSecret []byte `protobuf:"bytes,2,opt,name=scan_secret,json=scanSecret,proto3" json:"scan_secret,omitempty"`
	// The spend secret is the private key necessary for spending
	// the utxos belonging to the account.
	SpendSecret []byte `protobuf:"bytes,3,opt,name=spend_secret,json=spendSecret,proto3" json:"spend_secret,omitempty"`
	// The fee rate per KB in litoshis.
	FeeRatePerKb uint64 `protobuf:"varint,4,opt,name=fee_rate_per_kb,json=feeRatePerKb,proto3" json:"fee_rate_per_kb,omitempty"`
	// Whether to skip MWEB transaction creation. This is useful
	// for fee estimation.
	DryRun        bool `protobuf:"varint,5,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	mi := &file_mwebd_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{9}
}

func (x *CreateRequest) GetRawTx() []byte {
	if x != nil {
		return x.RawTx
	}
	return nil
}

func (x *CreateRequest) GetScanSecret() []byte {
	if x != nil {
		return x.ScanSecret
	}
	return nil
}

func (x *CreateRequest) GetSpendSecret() []byte {
	if x != nil {
		return x.SpendSecret
	}
	return nil
}

func (x *CreateRequest) GetFeeRatePerKb() uint64 {
	if x != nil {
		return x.FeeRatePerKb
	}
	return 0
}

func (x *CreateRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

type CreateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The raw bytes of the serialized transaction. It will contain
	// a single TxOut representing the peg-in required. From this
	// it is possible to determine the addtional fee that was added
	// by the MWEB transaction.
	RawTx []byte `protobuf:"bytes,1,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
	// The output IDs of any utxos created by the transaction,
	// in the same order as in the template.
	OutputId      []string `protobuf:"bytes,2,rep,name=output_id,json=outputId,proto3" json:"output_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	mi := &file_mwebd_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{10}
}

func (x *CreateResponse) GetRawTx() []byte {
	if x != nil {
		return x.RawTx
	}
	return nil
}

func (x *CreateResponse) GetOutputId() []string {
	if x != nil {
		return x.OutputId
	}
	return nil
}

type PsbtCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The raw bytes of the serialized transaction.
	RawTx []byte `protobuf:"bytes,1,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
	// Witness utxos for each input.
	WitnessUtxo   []*TxOut `protobuf:"bytes,2,rep,name=witness_utxo,json=witnessUtxo,proto3" json:"witness_utxo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PsbtCreateRequest) Reset() {
	*x = PsbtCreateRequest{}
	mi := &file_mwebd_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PsbtCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PsbtCreateRequest) ProtoMessage() {}

func (x *PsbtCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PsbtCreateRequest.ProtoReflect.Descriptor instead.
func (*PsbtCreateRequest) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{11}
}

func (x *PsbtCreateRequest) GetRawTx() []byte {
	if x != nil {
		return x.RawTx
	}
	return nil
}

func (x *PsbtCreateRequest) GetWitnessUtxo() []*TxOut {
	if x != nil {
		return x.WitnessUtxo
	}
	return nil
}

type TxOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int64                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	PkScript      []byte                 `protobuf:"bytes,2,opt,name=pk_script,json=pkScript,proto3" json:"pk_script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxOut) Reset() {
	*x = TxOut{}
	mi := &file_mwebd_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxOut) ProtoMessage() {}

func (x *TxOut) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxOut.ProtoReflect.Descriptor instead.
func (*TxOut) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{12}
}

func (x *TxOut) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TxOut) GetPkScript() []byte {
	if x != nil {
		return x.PkScript
	}
	return nil
}

type PsbtResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The PSBT in base64 encoding.
	PsbtB64       string `protobuf:"bytes,1,opt,name=psbt_b64,json=psbtB64,proto3" json:"psbt_b64,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PsbtResponse) Reset() {
	*x = PsbtResponse{}
	mi := &file_mwebd_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PsbtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PsbtResponse) ProtoMessage() {}

func (x *PsbtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PsbtResponse.ProtoReflect.Descriptor instead.
func (*PsbtResponse) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{13}
}

func (x *PsbtResponse) GetPsbtB64() string {
	if x != nil {
		return x.PsbtB64
	}
	return ""
}

type PsbtAddInputRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The PSBT in base64 encoding.
	PsbtB64 string `protobuf:"bytes,1,opt,name=psbt_b64,json=psbtB64,proto3" json:"psbt_b64,omitempty"`
	// The scan secret or view key represents the account that
	// the utxos being spent belong to.
	ScanSecret []byte `protobuf:"bytes,2,opt,name=scan_secret,json=scanSecret,proto3" json:"scan_secret,omitempty"`
	// The output ID of the utxo.
	OutputId string `protobuf:"bytes,3,opt,name=output_id,json=outputId,proto3" json:"output_id,omitempty"`
	// The address index of the utxo.
	AddressIndex  uint32 `protobuf:"varint,4,opt,name=address_index,json=addressIndex,proto3" json:"address_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PsbtAddInputRequest) Reset() {
	*x = PsbtAddInputRequest{}
	mi := &file_mwebd_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PsbtAddInputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PsbtAddInputRequest) ProtoMessage() {}

func (x *PsbtAddInputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PsbtAddInputRequest.ProtoReflect.Descriptor instead.
func (*PsbtAddInputRequest) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{14}
}

func (x *PsbtAddInputRequest) GetPsbtB64() string {
	if x != nil {
		return x.PsbtB64
	}
	return ""
}

func (x *PsbtAddInputRequest) GetScanSecret() []byte {
	if x != nil {
		return x.ScanSecret
	}
	return nil
}

func (x *PsbtAddInputRequest) GetOutputId() string {
	if x != nil {
		return x.OutputId
	}
	return ""
}

func (x *PsbtAddInputRequest) GetAddressIndex() uint32 {
	if x != nil {
		return x.AddressIndex
	}
	return 0
}

type PsbtAddRecipientRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The PSBT in base64 encoding.
	PsbtB64 string `protobuf:"bytes,1,opt,name=psbt_b64,json=psbtB64,proto3" json:"psbt_b64,omitempty"`
	// The value to send.
	Value int64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	// The scan public key of the recipient address.
	ScanPubkey []byte `protobuf:"bytes,3,opt,name=scan_pubkey,json=scanPubkey,proto3" json:"scan_pubkey,omitempty"`
	// The spend public key of the recipient address.
	SpendPubkey   []byte `protobuf:"bytes,4,opt,name=spend_pubkey,json=spendPubkey,proto3" json:"spend_pubkey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PsbtAddRecipientRequest) Reset() {
	*x = PsbtAddRecipientRequest{}
	mi := &file_mwebd_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PsbtAddRecipientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PsbtAddRecipientRequest) ProtoMessage() {}

func (x *PsbtAddRecipientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PsbtAddRecipientRequest.ProtoReflect.Descriptor instead.
func (*PsbtAddRecipientRequest) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{15}
}

func (x *PsbtAddRecipientRequest) GetPsbtB64() string {
	if x != nil {
		return x.PsbtB64
	}
	return ""
}

func (x *PsbtAddRecipientRequest) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *PsbtAddRecipientRequest) GetScanPubkey() []byte {
	if x != nil {
		return x.ScanPubkey
	}
	return nil
}

func (x *PsbtAddRecipientRequest) GetSpendPubkey() []byte {
	if x != nil {
		return x.SpendPubkey
	}
	return nil
}

type PsbtAddPegoutRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The PSBT in base64 encoding.
	PsbtB64 string `protobuf:"bytes,1,opt,name=psbt_b64,json=psbtB64,proto3" json:"psbt_b64,omitempty"`
	// The value to send.
	Value int64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	// The pk script to peg-out to.
	PkScript []byte `protobuf:"bytes,3,opt,name=pk_script,json=pkScript,proto3" json:"pk_script,omitempty"`
	// The fee rate per KB in litoshis.
	FeeRatePerKb  uint64 `protobuf:"varint,4,opt,name=fee_rate_per_kb,json=feeRatePerKb,proto3" json:"fee_rate_per_kb,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PsbtAddPegoutRequest) Reset() {
	*x = PsbtAddPegoutRequest{}
	mi := &file_mwebd_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PsbtAddPegoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PsbtAddPegoutRequest) ProtoMessage() {}

func (x *PsbtAddPegoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PsbtAddPegoutRequest.ProtoReflect.Descriptor instead.
func (*PsbtAddPegoutRequest) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{16}
}

func (x *PsbtAddPegoutRequest) GetPsbtB64() string {
	if x != nil {
		return x.PsbtB64
	}
	return ""
}

func (x *PsbtAddPegoutRequest) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *PsbtAddPegoutRequest) GetPkScript() []byte {
	if x != nil {
		return x.PkScript
	}
	return nil
}

func (x *PsbtAddPegoutRequest) GetFeeRatePerKb() uint64 {
	if x != nil {
		return x.FeeRatePerKb
	}
	return 0
}

type PsbtGetRecipientsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The PSBT in base64 encoding.
	PsbtB64       string `protobuf:"bytes,1,opt,name=psbt_b64,json=psbtB64,proto3" json:"psbt_b64,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PsbtGetRecipientsRequest) Reset() {
	*x = PsbtGetRecipientsRequest{}
	mi := &file_mwebd_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PsbtGetRecipientsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PsbtGetRecipientsRequest) ProtoMessage() {}

func (x *PsbtGetRecipientsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PsbtGetRecipientsRequest.ProtoReflect.Descriptor instead.
func (*PsbtGetRecipientsRequest) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{17}
}

func (x *PsbtGetRecipientsRequest) GetPsbtB64() string {
	if x != nil {
		return x.PsbtB64
	}
	return ""
}

type PsbtGetRecipientsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Recipient     []*PsbtRecipient       `protobuf:"bytes,1,rep,name=recipient,proto3" json:"recipient,omitempty"`
	InputPubkey   [][]byte               `protobuf:"bytes,2,rep,name=input_pubkey,json=inputPubkey,proto3" json:"input_pubkey,omitempty"`
	Fee           int64                  `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PsbtGetRecipientsResponse) Reset() {
	*x = PsbtGetRecipientsResponse{}
	mi := &file_mwebd_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PsbtGetRecipientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PsbtGetRecipientsResponse) ProtoMessage() {}

func (x *PsbtGetRecipientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PsbtGetRecipientsResponse.ProtoReflect.Descriptor instead.
func (*PsbtGetRecipientsResponse) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{18}
}

func (x *PsbtGetRecipientsResponse) GetRecipient() []*PsbtRecipient {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *PsbtGetRecipientsResponse) GetInputPubkey() [][]byte {
	if x != nil {
		return x.InputPubkey
	}
	return nil
}

func (x *PsbtGetRecipientsResponse) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type PsbtRecipient struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Value         int64                  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PsbtRecipient) Reset() {
	*x = PsbtRecipient{}
	mi := &file_mwebd_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PsbtRecipient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PsbtRecipient) ProtoMessage() {}

func (x *PsbtRecipient) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PsbtRecipient.ProtoReflect.Descriptor instead.
func (*PsbtRecipient) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{19}
}

func (x *PsbtRecipient) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PsbtRecipient) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type PsbtSignRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The PSBT in base64 encoding.
	PsbtB64 string `protobuf:"bytes,1,opt,name=psbt_b64,json=psbtB64,proto3" json:"psbt_b64,omitempty"`
	// The scan secret or view key represents the account that
	// the utxos being spent belong to.
	ScanSecret []byte `protobuf:"bytes,2,opt,name=scan_secret,json=scanSecret,proto3" json:"scan_secret,omitempty"`
	// The spend secret is the private key necessary for spending
	// the utxos belonging to the account.
	SpendSecret   []byte `protobuf:"bytes,3,opt,name=spend_secret,json=spendSecret,proto3" json:"spend_secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PsbtSignRequest) Reset() {
	*x = PsbtSignRequest{}
	mi := &file_mwebd_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PsbtSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PsbtSignRequest) ProtoMessage() {}

func (x *PsbtSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PsbtSignRequest.ProtoReflect.Descriptor instead.
func (*PsbtSignRequest) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{20}
}

func (x *PsbtSignRequest) GetPsbtB64() string {
	if x != nil {
		return x.PsbtB64
	}
	return ""
}

func (x *PsbtSignRequest) GetScanSecret() []byte {
	if x != nil {
		return x.ScanSecret
	}
	return nil
}

func (x *PsbtSignRequest) GetSpendSecret() []byte {
	if x != nil {
		return x.SpendSecret
	}
	return nil
}

type PsbtSignNonMwebRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The PSBT in base64 encoding.
	PsbtB64 string `protobuf:"bytes,1,opt,name=psbt_b64,json=psbtB64,proto3" json:"psbt_b64,omitempty"`
	// The private key necessary for spending the input.
	PrivKey []byte `protobuf:"bytes,2,opt,name=priv_key,json=privKey,proto3" json:"priv_key,omitempty"`
	// The index of the input to sign.
	Index         uint32 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PsbtSignNonMwebRequest) Reset() {
	*x = PsbtSignNonMwebRequest{}
	mi := &file_mwebd_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PsbtSignNonMwebRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PsbtSignNonMwebRequest) ProtoMessage() {}

func (x *PsbtSignNonMwebRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PsbtSignNonMwebRequest.ProtoReflect.Descriptor instead.
func (*PsbtSignNonMwebRequest) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{21}
}

func (x *PsbtSignNonMwebRequest) GetPsbtB64() string {
	if x != nil {
		return x.PsbtB64
	}
	return ""
}

func (x *PsbtSignNonMwebRequest) GetPrivKey() []byte {
	if x != nil {
		return x.PrivKey
	}
	return nil
}

func (x *PsbtSignNonMwebRequest) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type PsbtExtractRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The PSBT in base64 encoding.
	PsbtB64 string `protobuf:"bytes,1,opt,name=psbt_b64,json=psbtB64,proto3" json:"psbt_b64,omitempty"`
	// Extract the unsigned transaction.
	Unsigned      bool `protobuf:"varint,2,opt,name=unsigned,proto3" json:"unsigned,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PsbtExtractRequest) Reset() {
	*x = PsbtExtractRequest{}
	mi := &file_mwebd_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PsbtExtractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PsbtExtractRequest) ProtoMessage() {}

func (x *PsbtExtractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PsbtExtractRequest.ProtoReflect.Descriptor instead.
func (*PsbtExtractRequest) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{22}
}

func (x *PsbtExtractRequest) GetPsbtB64() string {
	if x != nil {
		return x.PsbtB64
	}
	return ""
}

func (x *PsbtExtractRequest) GetUnsigned() bool {
	if x != nil {
		return x.Unsigned
	}
	return false
}

type BroadcastRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The raw bytes of the serialized transaction.
	RawTx         []byte `protobuf:"bytes,1,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BroadcastRequest) Reset() {
	*x = BroadcastRequest{}
	mi := &file_mwebd_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastRequest) ProtoMessage() {}

func (x *BroadcastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastRequest.ProtoReflect.Descriptor instead.
func (*BroadcastRequest) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{23}
}

func (x *BroadcastRequest) GetRawTx() []byte {
	if x != nil {
		return x.RawTx
	}
	return nil
}

type BroadcastResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The transaction ID.
	Txid          string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BroadcastResponse) Reset() {
	*x = BroadcastResponse{}
	mi := &file_mwebd_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastResponse) ProtoMessage() {}

func (x *BroadcastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastResponse.ProtoReflect.Descriptor instead.
func (*BroadcastResponse) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{24}
}

func (x *BroadcastResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type CoinswapRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The scan secret or view key represents the account that
	// the utxo belongs to.
	ScanSecret []byte `protobuf:"bytes,1,opt,name=scan_secret,json=scanSecret,proto3" json:"scan_secret,omitempty"`
	// The spend secret is the private key necessary for spending
	// the utxos belonging to the account.
	SpendSecret []byte `protobuf:"bytes,2,opt,name=spend_secret,json=spendSecret,proto3" json:"spend_secret,omitempty"`
	// Output ID of the utxo to request a coinswap for.
	OutputId string `protobuf:"bytes,3,opt,name=output_id,json=outputId,proto3" json:"output_id,omitempty"`
	// Address index of the utxo.
	AddrIndex     uint32 `protobuf:"varint,4,opt,name=addr_index,json=addrIndex,proto3" json:"addr_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CoinswapRequest) Reset() {
	*x = CoinswapRequest{}
	mi := &file_mwebd_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoinswapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinswapRequest) ProtoMessage() {}

func (x *CoinswapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinswapRequest.ProtoReflect.Descriptor instead.
func (*CoinswapRequest) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{25}
}

func (x *CoinswapRequest) GetScanSecret() []byte {
	if x != nil {
		return x.ScanSecret
	}
	return nil
}

func (x *CoinswapRequest) GetSpendSecret() []byte {
	if x != nil {
		return x.SpendSecret
	}
	return nil
}

func (x *CoinswapRequest) GetOutputId() string {
	if x != nil {
		return x.OutputId
	}
	return ""
}

func (x *CoinswapRequest) GetAddrIndex() uint32 {
	if x != nil {
		return x.AddrIndex
	}
	return 0
}

type CoinswapResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output ID of the utxo created by the transaction.
	OutputId      string `protobuf:"bytes,1,opt,name=output_id,json=outputId,proto3" json:"output_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CoinswapResponse) Reset() {
	*x = CoinswapResponse{}
	mi := &file_mwebd_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoinswapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinswapResponse) ProtoMessage() {}

func (x *CoinswapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mwebd_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinswapResponse.ProtoReflect.Descriptor instead.
func (*CoinswapResponse) Descriptor() ([]byte, []int) {
	return file_mwebd_proto_rawDescGZIP(), []int{26}
}

func (x *CoinswapResponse) GetOutputId() string {
	if x != nil {
		return x.OutputId
	}
	return ""
}

var File_mwebd_proto protoreflect.FileDescriptor

const file_mwebd_proto_rawDesc = "" +
	"\n" +
	"\vmwebd.proto\"\x0f\n" +
	"\rStatusRequest\"\xb9\x01\n" +
	"\x0eStatusResponse\x12.\n" +
	"\x13block_header_height\x18\x01 \x01(\x05R\x11blockHeaderHeight\x12,\n" +
	"\x12mweb_header_height\x18\x02 \x01(\x05R\x10mwebHeaderHeight\x12*\n" +
	"\x11mweb_utxos_height\x18\x03 \x01(\x05R\x0fmwebUtxosHeight\x12\x1d\n" +
	"\n" +
	"block_time\x18\x04 \x01(\rR\tblockTime\"P\n" +
	"\fUtxosRequest\x12\x1f\n" +
	"\vfrom_height\x18\x01 \x01(\x05R\n" +
	"fromHeight\x12\x1f\n" +
	"\vscan_secret\x18\x02 \x01(\fR\n" +
	"scanSecret\"\x8a\x01\n" +
	"\x04Utxo\x12\x16\n" +
	"\x06height\x18\x01 \x01(\x05R\x06height\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x1b\n" +
	"\toutput_id\x18\x04 \x01(\tR\boutputId\x12\x1d\n" +
	"\n" +
	"block_time\x18\x05 \x01(\rR\tblockTime\"\x8e\x01\n" +
	"\x0eAddressRequest\x12\x1d\n" +
	"\n" +
	"from_index\x18\x01 \x01(\rR\tfromIndex\x12\x19\n" +
	"\bto_index\x18\x02 \x01(\rR\atoIndex\x12\x1f\n" +
	"\vscan_secret\x18\x03 \x01(\fR\n" +
	"scanSecret\x12!\n" +
	"\fspend_pubkey\x18\x04 \x01(\fR\vspendPubkey\"+\n" +
	"\x0fAddressResponse\x12\x18\n" +
	"\aaddress\x18\x01 \x03(\tR\aaddress\" \n" +
	"\n" +
	"LedgerApdu\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"+\n" +
	"\fSpentRequest\x12\x1b\n" +
	"\toutput_id\x18\x01 \x03(\tR\boutputId\",\n" +
	"\rSpentResponse\x12\x1b\n" +
	"\toutput_id\x18\x01 \x03(\tR\boutputId\"\xaa\x01\n" +
	"\rCreateRequest\x12\x15\n" +
	"\x06raw_tx\x18\x01 \x01(\fR\x05rawTx\x12\x1f\n" +
	"\vscan_secret\x18\x02 \x01(\fR\n" +
	"scanSecret\x12!\n" +
	"\fspend_secret\x18\x03 \x01(\fR\vspendSecret\x12%\n" +
	"\x0ffee_rate_per_kb\x18\x04 \x01(\x04R\ffeeRatePerKb\x12\x17\n" +
	"\adry_run\x18\x05 \x01(\bR\x06dryRun\"D\n" +
	"\x0eCreateResponse\x12\x15\n" +
	"\x06raw_tx\x18\x01 \x01(\fR\x05rawTx\x12\x1b\n" +
	"\toutput_id\x18\x02 \x03(\tR\boutputId\"U\n" +
	"\x11PsbtCreateRequest\x12\x15\n" +
	"\x06raw_tx\x18\x01 \x01(\fR\x05rawTx\x12)\n" +
	"\fwitness_utxo\x18\x02 \x03(\v2\x06.TxOutR\vwitnessUtxo\":\n" +
	"\x05TxOut\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x03R\x05value\x12\x1b\n" +
	"\tpk_script\x18\x02 \x01(\fR\bpkScript\")\n" +
	"\fPsbtResponse\x12\x19\n" +
	"\bpsbt_b64\x18\x01 \x01(\tR\apsbtB64\"\x93\x01\n" +
	"\x13PsbtAddInputRequest\x12\x19\n" +
	"\bpsbt_b64\x18\x01 \x01(\tR\apsbtB64\x12\x1f\n" +
	"\vscan_secret\x18\x02 \x01(\fR\n" +
	"scanSecret\x12\x1b\n" +
	"\toutput_id\x18\x03 \x01(\tR\boutputId\x12#\n" +
	"\raddress_index\x18\x04 \x01(\rR\faddressIndex\"\x8e\x01\n" +
	"\x17PsbtAddRecipientRequest\x12\x19\n" +
	"\bpsbt_b64\x18\x01 \x01(\tR\apsbtB64\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value\x12\x1f\n" +
	"\vscan_pubkey\x18\x03 \x01(\fR\n" +
	"scanPubkey\x12!\n" +
	"\fspend_pubkey\x18\x04 \x01(\fR\vspendPubkey\"\x8b\x01\n" +
	"\x14PsbtAddPegoutRequest\x12\x19\n" +
	"\bpsbt_b64\x18\x01 \x01(\tR\apsbtB64\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value\x12\x1b\n" +
	"\tpk_script\x18\x03 \x01(\fR\bpkScript\x12%\n" +
	"\x0ffee_rate_per_kb\x18\x04 \x01(\x04R\ffeeRatePerKb\"5\n" +
	"\x18PsbtGetRecipientsRequest\x12\x19\n" +
	"\bpsbt_b64\x18\x01 \x01(\tR\apsbtB64\"~\n" +
	"\x19PsbtGetRecipientsResponse\x12,\n" +
	"\trecipient\x18\x01 \x03(\v2\x0e.PsbtRecipientR\trecipient\x12!\n" +
	"\finput_pubkey\x18\x02 \x03(\fR\vinputPubkey\x12\x10\n" +
	"\x03fee\x18\x03 \x01(\x03R\x03fee\"?\n" +
	"\rPsbtRecipient\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value\"p\n" +
	"\x0fPsbtSignRequest\x12\x19\n" +
	"\bpsbt_b64\x18\x01 \x01(\tR\apsbtB64\x12\x1f\n" +
	"\vscan_secret\x18\x02 \x01(\fR\n" +
	"scanSecret\x12!\n" +
	"\fspend_secret\x18\x03 \x01(\fR\vspendSecret\"d\n" +
	"\x16PsbtSignNonMwebRequest\x12\x19\n" +
	"\bpsbt_b64\x18\x01 \x01(\tR\apsbtB64\x12\x19\n" +
	"\bpriv_key\x18\x02 \x01(\fR\aprivKey\x12\x14\n" +
	"\x05index\x18\x03 \x01(\rR\x05index\"K\n" +
	"\x12PsbtExtractRequest\x12\x19\n" +
	"\bpsbt_b64\x18\x01 \x01(\tR\apsbtB64\x12\x1a\n" +
	"\bunsigned\x18\x02 \x01(\bR\bunsigned\")\n" +
	"\x10BroadcastRequest\x12\x15\n" +
	"\x06raw_tx\x18\x01 \x01(\fR\x05rawTx\"'\n" +
	"\x11BroadcastResponse\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\"\x91\x01\n" +
	"\x0fCoinswapRequest\x12\x1f\n" +
	"\vscan_secret\x18\x01 \x01(\fR\n" +
	"scanSecret\x12!\n" +
	"\fspend_secret\x18\x02 \x01(\fR\vspendSecret\x12\x1b\n" +
	"\toutput_id\x18\x03 \x01(\tR\boutputId\x12\x1d\n" +
	"\n" +
	"addr_index\x18\x04 \x01(\rR\taddrIndex\"/\n" +
	"\x10CoinswapResponse\x12\x1b\n" +
	"\toutput_id\x18\x01 \x01(\tR\boutputId2\xa8\x06\n" +
	"\x03Rpc\x12)\n" +
	"\x06Status\x12\x0e.StatusRequest\x1a\x0f.StatusResponse\x12\x1f\n" +
	"\x05Utxos\x12\r.UtxosRequest\x1a\x05.Utxo0\x01\x12.\n" +
	"\tAddresses\x12\x0f.AddressRequest\x1a\x10.AddressResponse\x12&\n" +
	"\x05Spent\x12\r.SpentRequest\x1a\x0e.SpentResponse\x12)\n" +
	"\x06Create\x12\x0e.CreateRequest\x1a\x0f.CreateResponse\x12/\n" +
	"\n" +
	"PsbtCreate\x12\x12.PsbtCreateRequest\x1a\r.PsbtResponse\x123\n" +
	"\fPsbtAddInput\x12\x14.PsbtAddInputRequest\x1a\r.PsbtResponse\x12;\n" +
	"\x10PsbtAddRecipient\x12\x18.PsbtAddRecipientRequest\x1a\r.PsbtResponse\x125\n" +
	"\rPsbtAddPegout\x12\x15.PsbtAddPegoutRequest\x1a\r.PsbtResponse\x12J\n" +
	"\x11PsbtGetRecipients\x12\x19.PsbtGetRecipientsRequest\x1a\x1a.PsbtGetRecipientsResponse\x12+\n" +
	"\bPsbtSign\x12\x10.PsbtSignRequest\x1a\r.PsbtResponse\x129\n" +
	"\x0fPsbtSignNonMweb\x12\x17.PsbtSignNonMwebRequest\x1a\r.PsbtResponse\x123\n" +
	"\vPsbtExtract\x12\x13.PsbtExtractRequest\x1a\x0f.CreateResponse\x12*\n" +
	"\x0eLedgerExchange\x12\v.LedgerApdu\x1a\v.LedgerApdu\x122\n" +
	"\tBroadcast\x12\x11.BroadcastRequest\x1a\x12.BroadcastResponse\x12/\n" +
	"\bCoinswap\x12\x10.CoinswapRequest\x1a\x11.CoinswapResponseB Z\x1egithub.com/ltcmweb/mwebd/protob\x06proto3"

var (
	file_mwebd_proto_rawDescOnce sync.Once
	file_mwebd_proto_rawDescData []byte
)

func file_mwebd_proto_rawDescGZIP() []byte {
	file_mwebd_proto_rawDescOnce.Do(func() {
		file_mwebd_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mwebd_proto_rawDesc), len(file_mwebd_proto_rawDesc)))
	})
	return file_mwebd_proto_rawDescData
}

var file_mwebd_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_mwebd_proto_goTypes = []any{
	(*StatusRequest)(nil),             // 0: StatusRequest
	(*StatusResponse)(nil),            // 1: StatusResponse
	(*UtxosRequest)(nil),              // 2: UtxosRequest
	(*Utxo)(nil),                      // 3: Utxo
	(*AddressRequest)(nil),            // 4: AddressRequest
	(*AddressResponse)(nil),           // 5: AddressResponse
	(*LedgerApdu)(nil),                // 6: LedgerApdu
	(*SpentRequest)(nil),              // 7: SpentRequest
	(*SpentResponse)(nil),             // 8: SpentResponse
	(*CreateRequest)(nil),             // 9: CreateRequest
	(*CreateResponse)(nil),            // 10: CreateResponse
	(*PsbtCreateRequest)(nil),         // 11: PsbtCreateRequest
	(*TxOut)(nil),                     // 12: TxOut
	(*PsbtResponse)(nil),              // 13: PsbtResponse
	(*PsbtAddInputRequest)(nil),       // 14: PsbtAddInputRequest
	(*PsbtAddRecipientRequest)(nil),   // 15: PsbtAddRecipientRequest
	(*PsbtAddPegoutRequest)(nil),      // 16: PsbtAddPegoutRequest
	(*PsbtGetRecipientsRequest)(nil),  // 17: PsbtGetRecipientsRequest
	(*PsbtGetRecipientsResponse)(nil), // 18: PsbtGetRecipientsResponse
	(*PsbtRecipient)(nil),             // 19: PsbtRecipient
	(*PsbtSignRequest)(nil),           // 20: PsbtSignRequest
	(*PsbtSignNonMwebRequest)(nil),    // 21: PsbtSignNonMwebRequest
	(*PsbtExtractRequest)(nil),        // 22: PsbtExtractRequest
	(*BroadcastRequest)(nil),          // 23: BroadcastRequest
	(*BroadcastResponse)(nil),         // 24: BroadcastResponse
	(*CoinswapRequest)(nil),           // 25: CoinswapRequest
	(*CoinswapResponse)(nil),          // 26: CoinswapResponse
}
var file_mwebd_proto_depIdxs = []int32{
	12, // 0: PsbtCreateRequest.witness_utxo:type_name -> TxOut
	19, // 1: PsbtGetRecipientsResponse.recipient:type_name -> PsbtRecipient
	0,  // 2: Rpc.Status:input_type -> StatusRequest
	2,  // 3: Rpc.Utxos:input_type -> UtxosRequest
	4,  // 4: Rpc.Addresses:input_type -> AddressRequest
	7,  // 5: Rpc.Spent:input_type -> SpentRequest
	9,  // 6: Rpc.Create:input_type -> CreateRequest
	11, // 7: Rpc.PsbtCreate:input_type -> PsbtCreateRequest
	14, // 8: Rpc.PsbtAddInput:input_type -> PsbtAddInputRequest
	15, // 9: Rpc.PsbtAddRecipient:input_type -> PsbtAddRecipientRequest
	16, // 10: Rpc.PsbtAddPegout:input_type -> PsbtAddPegoutRequest
	17, // 11: Rpc.PsbtGetRecipients:input_type -> PsbtGetRecipientsRequest
	20, // 12: Rpc.PsbtSign:input_type -> PsbtSignRequest
	21, // 13: Rpc.PsbtSignNonMweb:input_type -> PsbtSignNonMwebRequest
	22, // 14: Rpc.PsbtExtract:input_type -> PsbtExtractRequest
	6,  // 15: Rpc.LedgerExchange:input_type -> LedgerApdu
	23, // 16: Rpc.Broadcast:input_type -> BroadcastRequest
	25, // 17: Rpc.Coinswap:input_type -> CoinswapRequest
	1,  // 18: Rpc.Status:output_type -> StatusResponse
	3,  // 19: Rpc.Utxos:output_type -> Utxo
	5,  // 20: Rpc.Addresses:output_type -> AddressResponse
	8,  // 21: Rpc.Spent:output_type -> SpentResponse
	10, // 22: Rpc.Create:output_type -> CreateResponse
	13, // 23: Rpc.PsbtCreate:output_type -> PsbtResponse
	13, // 24: Rpc.PsbtAddInput:output_type -> PsbtResponse
	13, // 25: Rpc.PsbtAddRecipient:output_type -> PsbtResponse
	13, // 26: Rpc.PsbtAddPegout:output_type -> PsbtResponse
	18, // 27: Rpc.PsbtGetRecipients:output_type -> PsbtGetRecipientsResponse
	13, // 28: Rpc.PsbtSign:output_type -> PsbtResponse
	13, // 29: Rpc.PsbtSignNonMweb:output_type -> PsbtResponse
	10, // 30: Rpc.PsbtExtract:output_type -> CreateResponse
	6,  // 31: Rpc.LedgerExchange:output_type -> LedgerApdu
	24, // 32: Rpc.Broadcast:output_type -> BroadcastResponse
	26, // 33: Rpc.Coinswap:output_type -> CoinswapResponse
	18, // [18:34] is the sub-list for method output_type
	2,  // [2:18] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_mwebd_proto_init() }
func file_mwebd_proto_init() {
	if File_mwebd_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mwebd_proto_rawDesc), len(file_mwebd_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mwebd_proto_goTypes,
		DependencyIndexes: file_mwebd_proto_depIdxs,
		MessageInfos:      file_mwebd_proto_msgTypes,
	}.Build()
	File_mwebd_proto = out.File
	file_mwebd_proto_goTypes = nil
	file_mwebd_proto_depIdxs = nil
}
